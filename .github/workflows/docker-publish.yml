name: Docker Publish ghcr.io CI

#Whenever something is pushed to the master branch, an image is built and published to ghcr.io
#Any pull request resulting in a merge also includes a push and will therefore trigger this as well.
on:
    push:
        branches: ["master"]

jobs:
    build_and_publish:

        runs-on: ubuntu-latest #github runner vm will be based on ubuntu

        permissions: #give the job permission to view the repo contents and write packages (such as to github container registry)
            contents: read
            packages: write

        steps:
            - name: Checkout repository #will clone the repo to the github runner vm performing the action
              uses: actions/checkout@v4

            - name: Log into GHCR #Log into the github container registry so that images may be pushed
              #Will use the docker/login-action github action. 
              #Could also alternatively just run the docker CLI command: docker login
              uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
              with:
                registry: ghcr.io
                username: ${{ github.actor }} #Action context variable that stores the username of the user that triggered the initial workflow run. I.e. whoever pushed to the repo. Could also just put my username directly (Adzzzy)
                password: ${{ secrets.GITHUB_TOKEN }} #Github actions automatically creates a GITHUB_TOKEN that can be used for authentication within workflows in place of a Personal Access Token (PAT)

            - name: Build and push image
              run: | #pipe character allows consecutive run commands.
                docker build . --tag ghcr.io/adzzzy/wordle-in-cpp:${{ github.sha }}
                docker tag ghcr.io/adzzzy/wordle-in-cpp:${{ github.sha }} ghcr.io/adzzzy/wordle-in-cpp:latest
                docker push ghcr.io/adzzzy/wordle-in-cpp:latest
              #The image is first built using the pwd . as context and tagged with <image repo>/<repo owner>/<github repo>
              #The image repo name followed by the github account name is the format used for ghcr images, while the repo name can be anything, and will just be the github repo name in this case
              #The github.repository context variable could also be used (stores "Owner/Repo" belonging to current action) but it would need to be converted to lowercase, to be accepted as a tag.
              #The github.sha context variable stores a sha related to the commit which started the workflow and is appended on the end of the tag. This provides a way to identify the commit the image belongs to and have different tags for each publish rather than just "latest".
              #The "latest" tag is also added to the image so that it can be pulled from the registry even when no tag is specified.
                




